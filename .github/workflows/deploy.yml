name: Deploy FastAPI

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"

      - name: Instalar dependências
        run: |
          pip install fastapi uvicorn sqlalchemy pymysql cryptography python-dotenv
          pip install pytest httpx

      - name: Executar testes
        run: pytest tests/


  build-and-push-docker:\
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Login no Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Construir imagem Docker
        run: |
          docker build -t allanoruivo/meu_app:${{ github.sha }} .
          docker tag allanoruivo/meu_app:${{ github.sha }} allanoruivo/meu_app:latest

      - name: Publicar no Docker Hub
        run: |
          docker push allanoruivo/meu_app:${{ github.sha }}
          docker push allanoruivo/meu_app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push-docker
    steps:
      - name: Conectar na VPS via SSH e atualizar a aplicação
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            rm -rf devops_fastapi
            git clone https://github.com/AllanBOMelo/devops.git devops_fastapi
            cd devops_fastapi
            docker compose down
            echo DB_USER=${{ secrets.DB_USER }} >> .env
            echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
            echo DATABASE_URL=mysql+pymysql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@db/users >> .env
            docker compose up --build -d
